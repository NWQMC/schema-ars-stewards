databaseChangeLog:
  - preConditions:
    - dbms:
        type: postgresql
    - runningAs:
        username: postgres

  - changeSet:
      author: drsteini
      id: "create.project.db.owner.role.${ARS_DB_OWNER_USERNAME}"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - sqlCheck:
            expectedResult: 0
            sql: select count(*) from pg_roles where rolname = '${ARS_DB_OWNER_USERNAME}';
      changes:
        - sql: create role ${ARS_DB_OWNER_USERNAME} with login password '${ARS_DB_OWNER_PASSWORD}';
        - rollback: drop role if exists ${ARS_DB_OWNER_USERNAME};

  - changeSet:
      author: drsteini
      id: "grant.${ARS_DB_OWNER_USERNAME}.to.postgres"
      changes:
        - sql: grant ${ARS_DB_OWNER_USERNAME} to postgres;
        - rollback: revoke ${ARS_DB_OWNER_USERNAME} from postgres;

  - changeSet:
      author: mbucknell
      id: "create.project.owner.role.${ARS_SCHEMA_OWNER_USERNAME}"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - sqlCheck:
            expectedResult: 0
            sql: select count(*) from pg_roles where rolname = '${ARS_SCHEMA_OWNER_USERNAME}';
      changes:
        - sql: create role ${ARS_SCHEMA_OWNER_USERNAME} with login password '${ARS_SCHEMA_OWNER_PASSWORD}';
        - rollback: drop role if exists ${ARS_SCHEMA_OWNER_USERNAME};

  - changeSet:
      author: mbucknel
      id: "grant.${ARS_SCHEMA_OWNER_USERNAME}.to.postgres"
      changes:
        - sql: grant ${ARS_SCHEMA_OWNER_USERNAME} to postgres;
        - rollback: revoke ${ARS_SCHEMA_OWNER_USERNAME} from postgres;

  - changeSet:
      author: mbucknell
      id: "create.project.owner.role.${WQP_SCHEMA_OWNER_USERNAME}"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - sqlCheck:
            expectedResult: 0
            sql: select count(*) from pg_roles where rolname = '${WQP_SCHEMA_OWNER_USERNAME}';
      changes:
        - sql: create role ${WQP_SCHEMA_OWNER_USERNAME} with login password '${WQP_SCHEMA_OWNER_PASSWORD}';
        - rollback: drop role if exists ${WQP_SCHEMA_OWNER_USERNAME};

  - changeSet:
      author: mbucknell
      id: "create.project.database.${ARS_DATABASE_NAME}"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - sqlCheck:
            expectedResult: 0
            sql: select count(*) from pg_database where datname = '${ARS_DATABASE_NAME}';
      runInTransaction: false
      changes:
        - sql: create database ${ARS_DATABASE_NAME} with owner = ${ARS_DB_OWNER_USERNAME};
        - rollback: drop database if exists ${ARS_DATABASE_NAME};

  - changeSet:
      author: drsteini
      id: "alter.role.${ARS_SCHEMA_OWNER_USERNAME}.search_path"
      changes:
        - sql: alter role "${ARS_SCHEMA_OWNER_USERNAME}" set search_path = "$user", ${ARS_SCHEMA_NAME}, ${WQP_SCHEMA_NAME}, public, tiger;
        - rollback: alter role "${ARS_SCHEMA_OWNER_USERNAME}" reset search_path;
